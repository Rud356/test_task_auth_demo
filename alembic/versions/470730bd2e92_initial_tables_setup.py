"""Initial tables setup

Revision ID: 470730bd2e92
Revises: 
Create Date: 2025-08-13 13:58:55.835998

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '470730bd2e92'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('surname', sa.String(length=255), nullable=False),
    sa.Column('third_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('assigned_roles',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('credentials',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('salt', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_credentials_email'), 'credentials', ['email'], unique=True)
    op.create_table('resource',
    sa.Column('resource_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('content', sa.String(length=2048), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('resource_id')
    )
    op.create_table('session',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('session_id', sa.String(length=32), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'session_id')
    )
    op.create_table('user_permissions',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('edit_roles', sa.Boolean(), nullable=False),
    sa.Column('view_all_resources', sa.Boolean(), nullable=False),
    sa.Column('administrate_users', sa.Boolean(), nullable=False),
    sa.Column('administrate_resources', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('roles_permissions',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('can_view_resource', sa.Boolean(), nullable=False),
    sa.Column('can_edit_resource', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.resource_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'resource_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_permissions')
    op.drop_table('user_permissions')
    op.drop_table('session')
    op.drop_table('resource')
    op.drop_index(op.f('ix_credentials_email'), table_name='credentials')
    op.drop_table('credentials')
    op.drop_table('assigned_roles')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
